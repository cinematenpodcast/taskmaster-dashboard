# Task ID: 22
# Title: Backend: Allow tasks.json path via CLI argument
# Status: pending
# Dependencies: 2, 3
# Priority: medium
# Description: Modify the backend service to accept the path to the tasks.json file as a command-line argument.
# Details:
Implement command-line argument parsing in the backend entry point (e.g., server.js). Use a library like `yargs` or Node.js's built-in `process.argv` to define and parse an argument (e.g., `--tasks-path` or `-f`) that specifies the location of the tasks.json file. The backend should use this provided path for file monitoring (Task 2) and JSON parsing. If the argument is not provided, the backend should default to the current behavior (e.g., using `./tasks.json`). Ensure robust error handling for invalid or non-existent paths provided via the argument, logging appropriate messages and potentially falling back to the default path or exiting gracefully. Update the file watching and parsing logic to dynamically use the path obtained from the arguments.

# Test Strategy:
Run the backend server from the command line. Test without the argument to confirm it loads the default tasks.json. Create a test tasks.json file in a non-default location. Run the backend with the command-line argument specifying the path to the test file (e.g., `node server.js --tasks-path /path/to/test/tasks.json`). Verify that the backend successfully loads and parses the content of the specified file. Modify the test file while the server is running and confirm via a WebSocket client or logs that the backend detects changes and processes the correct file. Test with an invalid path to ensure error handling is correct.
